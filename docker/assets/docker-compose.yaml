# Нужно задать следующие сервисы:

# 1. database
# 2. backend
# 3. frontend
# 4. backend-migrations
# 5. backend-superuser

# Сервис database
# Образ — postgres:14
# Переменные окружения — POSTGRES_DB, POSTGRES_USER, POSTGRES_PASSWORD
# Можно задать вольюм (путь внутри контейнера — /var/lib/postgresql/data)
# healthcheck — укажем также только test: ["CMD-SHELL", "pg_isready", "-U", "admin"] (где -U - юзер)

# Сервис backend
# Образ —  kcoursedocker/task-9.2-back:latest
# Переменные окружения: 
# PG_NAME — соответствует POSTGRES_DB
# PG_USER — соответствует POSTGRES_USER
# PG_PASSWORD — соответствует POSTGRES_PASSWORD 
# PG_HOST — соответствует названию сервиса с базой данных (database)
# Зависимость: 
# database (condition: service_healthy)

# Сервис frontend
# Образ — kcoursedocker/task-9.2-front:latest
# Порт
# Зависимость: 
# database (condition: service_healthy)
# backend (condition: service_started)
# Заметьте, поскольку в бекенде (и в backend-migrations) мы не будем делать healthcheck, нам для этих сервисов нужно указать service_started.

# Сервис backend-migrations
# Образ —  kcoursedocker/task-9.2-back:latest
# Переменные окружения:
# PG_NAME — соответствует POSTGRES_DB
# PG_USER — соответствует POSTGRES_USER
# PG_PASSWORD — соответствует POSTGRES_PASSWORD
# PG_HOST — соответствует названию сервиса с базой данных (database)
# command — bash -c "make migrate"
# Зависимость:
# database (condition: service_healthy)
# backend (condition: service_started)

# Сервис backend-superuser
# Образ — kcoursedocker/task-9.2-back:latest
# Переменные окружения:
# PG_NAME — соответствует POSTGRES_DB
# PG_USER — соответствует POSTGRES_USER
# PG_PASSWORD — соответствует POSTGRES_PASSWORD
# PG_HOST — соответствует названию сервиса с базой данных (database)
# DJANGO_SUPERUSER_USERNAME — логин суперпользователя
# DJANGO_SUPERUSER_PASSWORD — пароль суперпользователя
# DJANGO_SUPERUSER_EMAIL — почта суперпользователя
# command — bash -c "make create-superuser"
# Зависимость:
# database (condition: service_healthy)
# backend (condition: service_started)
# backend-migrations (condition: service_started)

version: '3.5'

services:
  database:
    image: postgres:14
    environment:
      POSTGRES_DB: "todo_list"
      POSTGRES_USER: "admin"
      POSTGRES_PASSWORD: "admin"
    volumes:
      - "postgres:/var/lib/postgresql/data"
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready
        - -U
        - admin
  
  backend:
    image: kcoursedocker/task-9.2-back:latest
    environment:
      PG_NAME: todo_list
      PG_USER: admin
      PG_PASSWORD: admin
      PG_HOST: database
    depends_on:
      database:
        condition: service_healthy

  frontend:
    image: kcoursedocker/task-9.2-front:latest
    ports:
      - 127.0.0.1:80:80
    depends_on:
      database:
        condition: service_healthy
      backend:
        condition: service_started

  backend-migrations:
    image: kcoursedocker/task-9.2-back:latest
    environment:
      PG_NAME: todo_list
      PG_USER: admin
      PG_PASSWORD: admin
      PG_HOST: database
    command: bash -c "make migrate"
    depends_on:
      database:
        condition: service_healthy
      backend:
        condition: service_started

  backend-superuser:
    image: kcoursedocker/task-9.2-back:latest
    environment:
      PG_NAME: todo_list
      PG_USER: admin
      PG_PASSWORD: admin
      PG_HOST: database
      DJANGO_SUPERUSER_USERNAME: admin
      DJANGO_SUPERUSER_PASSWORD: admin
      DJANGO_SUPERUSER_EMAIL: admin
    command: bash -c "make create-superuser"
    depends_on:
      database:
        condition: service_healthy
      backend-migrations:
        condition: service_started
      backend:
        condition: service_started

volumes:
  postgres: